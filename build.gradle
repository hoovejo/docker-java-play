/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'
*/
apply plugin: 'docker'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}
// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

jar {
    baseName = 'sample'
    version =  '0.1.0'
}
group = "poc"

docker {
  baseImage "openjdk:8-jdk-alpine"
  maintainer "Joe Hoover <joe_hoover7@hotmail.com>"
}

task buildDocker(type: Docker) {
  applicationName = "pingpong"
  tagVersion = '1.0'
  push = project.hasProperty('push')
  addFile {
    from jar
    rename {'app.jar'}
  }
  addFile("src/main/scripts/entrypoint.sh", "entrypoint.sh")
  addFile("src/main/static", "hub/static")
  runCommand("chmod +x /entrypoint.sh")
  entryPoint(['./entrypoint.sh', 'testparm'])
  // exposePort(8080)
}

buildDocker.dependsOn(jar)
